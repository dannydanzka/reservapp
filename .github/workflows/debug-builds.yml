name: 🐛 Debug Builds

on:
  push:
    branches: [ develop, feature/* ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build'
        required: true
        default: 'both'
        type: choice
        options:
        - ios
        - android
        - both

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '11'
  RUBY_VERSION: '3.1'

jobs:
  # Type checking and linting
  quality-checks:
    name: 🔍 Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🔍 TypeScript check
        run: yarn type-check

      - name: 🎨 Lint code
        run: yarn lint

      - name: 🧪 Run tests
        run: |
          if yarn test --listTests --json | jq -r '.[] | length' | grep -q '^0$'; then
            echo "No tests found, skipping..."
          else
            yarn test --watchAll=false --coverage=false
          fi

  # iOS Debug Build
  ios-debug:
    name: 🍎 iOS Debug Build
    runs-on: macos-latest
    needs: quality-checks
    if: github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both' || github.event.inputs.platform == ''
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: 📦 Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: 🔐 Setup iOS certificates (if available)
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: |
          if [ -n "$MATCH_PASSWORD" ] && [ -n "$MATCH_GIT_URL" ]; then
            bundle exec fastlane ios setup_certificates type:development
          else
            echo "⚠️ iOS certificates not configured, skipping..."
          fi
        continue-on-error: true

      - name: 🏗️ Build iOS Debug
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          mkdir -p ios/builds/debug
          bundle exec fastlane ios debug
        continue-on-error: true

      - name: 📤 Upload iOS Debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-${{ github.run_number }}
          path: ios/builds/debug/*.ipa
          retention-days: 7
        continue-on-error: true

  # Android Debug Build  
  android-debug:
    name: 🤖 Android Debug Build
    runs-on: ubuntu-latest
    needs: quality-checks
    if: github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' || github.event.inputs.platform == ''
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: 📦 Install Node dependencies
        run: yarn install --frozen-lockfile

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔐 Make gradlew executable
        run: chmod +x android/gradlew

      - name: 🏗️ Build Android Debug
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          mkdir -p android/builds/debug
          bundle exec fastlane android debug

      - name: 📤 Upload Android Debug artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-${{ github.run_number }}
          path: android/builds/debug/*.apk
          retention-days: 7

  # Notify completion
  notify-completion:
    name: 📢 Notify Completion
    runs-on: ubuntu-latest
    needs: [ios-debug, android-debug]
    if: always()
    steps:
      - name: 📢 Send notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"🐛 Debug builds completed for ReservApp Mobile\n• iOS: ${{ needs.ios-debug.result || 'skipped' }}\n• Android: ${{ needs.android-debug.result || 'skipped' }}\n• Commit: '"$GITHUB_SHA"' by '"$GITHUB_ACTOR"'"}' \
              $SLACK_WEBHOOK_URL
          fi